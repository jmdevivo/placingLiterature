// Generated by CoffeeScript 1.7.1
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  PlacingLit.Views.HomepagemapView = (function(_super) {
    __extends(HomepagemapView, _super);

    function HomepagemapView() {
      return HomepagemapView.__super__.constructor.apply(this, arguments);
    }

    HomepagemapView.prototype.el = 'hpmap';

    HomepagemapView.prototype.locations = null;

    HomepagemapView.prototype.settings = {
      zoomLevel: {
        'homepagedefault': 14
      }
    };

    HomepagemapView.prototype.cities = {
      'newhaven': {
        lat: 41.3060969411,
        lng: -72.9260498285
      },
      'duluth': {
        lat: 46.7833,
        lng: -92.1064
      },
      'sanfrancisco': {
        lat: 37.7750,
        lng: -122.4183
      }
    };

    HomepagemapView.prototype.googlemap = function(id) {
      var mapStyle;
      if (this.gmap != null) {
        return this.gmap;
      }
      this.gmap = new google.maps.Map(document.getElementById(id), this.mapOptions);
      mapStyle = 'toner-lite';
      this.gmap.mapTypes.set(mapStyle, new google.maps.StamenMapType(mapStyle));
      this.gmap.setMapTypeId(mapStyle);
      return this.gmap;
    };

    HomepagemapView.prototype.mapMarkers = function(locations) {
      var location, mapcenter, _i, _len;
      if (this.gmap == null) {
        this.gmap = this.googlemap('hpmap');
      }
      for (_i = 0, _len = locations.length; _i < _len; _i++) {
        location = locations[_i];
        this.dropMarkerForStoredLocation(location);
      }
      mapcenter = new google.maps.LatLng(this.cities.newhaven.lat, this.cities.newhaven.lng);
      console.log('map markers', this.gmap);
      this.gmap.setCenter(mapcenter);
      return this.gmap.setZoom(this.settings.zoomLevel.homepagedefault);
    };

    HomepagemapView.prototype.dropMarkerForStoredLocation = function(location) {
      var marker, markerParams, pos;
      pos = new google.maps.LatLng(location.latitude, location.longitude);
      markerParams = {
        position: pos,
        draggable: false,
        animation: google.maps.Animation.DROP,
        icon: '/img/book.png',
        title: "" + location.title + " by " + location.author
      };
      marker = new google.maps.Marker(markerParams);
      return marker.setMap(this.gmap);
    };

    HomepagemapView.prototype.initialize = function() {
      if (this.places == null) {
        this.places = new PlacingLit.Collections.Locations;
      }
      this.listenTo(this.places, 'all', this.render);
      return this.places.fetch();
    };

    HomepagemapView.prototype.render = function(event) {
      if (event === 'sync') {
        return this.mapMarkers(this.places.models);
      }
    };

    return HomepagemapView;

  })(PlacingLit.Views.MapView);

}).call(this);
